# The first exercises

if __name__ == '__main__':
    N = int(input())
    list_num = []

    for x in range(N):
        operation = input()
        operation = operation.split()
        command = operation[0]
        if command == 'insert':
            place = int(operation[1])
            value = int(operation[2])
            list_num.insert(place, value)
        if command == 'print':
            print(list_num)
        if command == 'append':
            value = int(operation[1])
            list_num.append(value)
        if command == 'remove':
            number = int(operation[1])
            list_num.remove(number)
        if command == 'sort':
            list_num.sort()
        if command == 'reverse':
            list_num.reverse()
        if command == 'pop':
            list_num.pop()


# The second one

if __name__ == '__main__':
    n = int(input())
    integer_list = map(int, input().split())
    num_tuple = tuple(integer_list)
        if len(num_tuple) == n:
    	    print(hash(num_tuple))

# The third one

if __name__ == '__main__':
    x = int(input())
    y = int(input())
    z = int(input())
    n = int(input())
    print([[ i, j, k ] for i in range(x + 1) for j in range(y + 1) for k in range(z + 1) if ((i + j + k) != n)])

# The fourth one
# I've made this code better)))

if __name__ == '__main__':
    n = int(input())
    arr = map(int, input().split())
    set1 = set(arr)
    print(sorted(set1)[-2])

# The sixth one
# I've fixed this code too, now it's simplier

if __name__ == '__main__':
    n = int(input())
    student_marks = {}

    for _ in range(n):
        name, *marks = input().split()
        student_marks[name] = marks
    query_name = input()

    st_marks = list(map(float, student_marks[query_name]))
    print('{0:.2f}'.format(sum(st_marks)/len(st_marks)))